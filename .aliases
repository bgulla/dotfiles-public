# Install kubectl krew support
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

## bash-like aliases
function mkdircd() {
  if [[ "$1" == "-p" ]]; then
    shift
    mkdir -p "$1" && cd "$1"
  else
    mkdir "$1" && cd "$1"
  fi
}


##
# k8s | set default cluster config
##
## Set a default k3s/rke2 cluster config
if [ -f "/etc/rancher/k3s/k3s.yaml" ]; then
  export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
elif [ -f "/etc/rancher/rke2/rke2.yaml" ]; then
  export KUBECONFIG=/etc/rancher/rke2/rke2.yaml
fi

alias k3s-chown='sudo chown -R ${USER} ${KUBECONFIG}'


# Check for ~/.warn_k3s file
if [[ -e "$HOME/.warn_k3s" ]]; then
  # Check read permissions for /etc/rancher/k3s/k3s.yaml
  if [[ -e "/etc/rancher/k3s/k3s.yaml" && ! -r "/etc/rancher/k3s/k3s.yaml" ]]; then
    echo "Warning: You do not have read permissions for /etc/rancher/k3s/k3s.yaml"
  fi
  
  # Check read permissions for /etc/rancher/rke2/rke2.yaml
  if [[ -e "/etc/rancher/rke2/rke2.yaml" && ! -r "/etc/rancher/rke2/rke2.yaml" ]]; then
    echo "Warning: You do not have read permissions for /etc/rancher/rke2/rke2.yaml"
  fi
fi

# ===============================
# Velero Autocomplete and Alias
# ===============================

# Check if Velero is installed
if command -v velero > /dev/null 2>&1; then

    # Source Velero autocompletion
    source <(velero completion zsh)

    # Create alias 'v' for Velero
    alias v='velero'

    # Enable autocompletion for alias 'v'
    compdef _velero v

fi

# ===============================


#alias exportkubeconfig="export KUBECONFIG=${PWD}/kubeconfig"
